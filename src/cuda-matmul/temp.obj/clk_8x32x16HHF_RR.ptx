//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27506705
// Cuda compilation tools, release 10.2, V10.2.89
// Based on LLVM 3.4svn
//

.version 6.5
.target sm_75
.address_size 64

	// .globl	_Z12wmma_exampleP6__halfS0_PfS1_
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 1 .b8 $str[9] = {84, 105, 109, 101, 61, 37, 100, 10, 0};

.visible .entry _Z12wmma_exampleP6__halfS0_PfS1_(
	.param .u64 _Z12wmma_exampleP6__halfS0_PfS1__param_0,
	.param .u64 _Z12wmma_exampleP6__halfS0_PfS1__param_1,
	.param .u64 _Z12wmma_exampleP6__halfS0_PfS1__param_2,
	.param .u64 _Z12wmma_exampleP6__halfS0_PfS1__param_3
)
{
	.local .align 8 .b8 	__local_depot0[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<13>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd1, [_Z12wmma_exampleP6__halfS0_PfS1__param_0];
	ld.param.u64 	%rd2, [_Z12wmma_exampleP6__halfS0_PfS1__param_1];
	ld.param.u64 	%rd3, [_Z12wmma_exampleP6__halfS0_PfS1__param_2];
	ld.param.u64 	%rd4, [_Z12wmma_exampleP6__halfS0_PfS1__param_3];
	cvta.to.global.u64 	%rd5, %rd4;
	add.u64 	%rd6, %SP, 0;
	add.u64 	%rd7, %SPL, 0;
	cvta.to.global.u64 	%rd8, %rd3;
	cvta.to.global.u64 	%rd9, %rd1;
	mov.u32 	%r3, 16;
	wmma.load.a.sync.aligned.row.m8n32k16.global.f16 	{%r4, %r5, %r6, %r7, %r8, %r9, %r10, %r11}, [%rd9], %r3;
	cvta.to.global.u64 	%rd10, %rd2;
	mov.u32 	%r12, 32;
	wmma.load.b.sync.aligned.row.m8n32k16.global.f16 	{%r13, %r14, %r15, %r16, %r17, %r18, %r19, %r20}, [%rd10], %r12;
	wmma.load.c.sync.aligned.row.m8n32k16.global.f32 	{%f1, %f2, %f3, %f4, %f5, %f6, %f7, %f8}, [%rd8], %r12;
	// inline asm
	mov.u32 	%r1, %clock;
	// inline asm
	wmma.mma.sync.aligned.row.row.m8n32k16.f32.f32 {%f9, %f10, %f11, %f12, %f13, %f14, %f15, %f16}, {%r4, %r5, %r6, %r7, %r8, %r9, %r10, %r11}, {%r13, %r14, %r15, %r16, %r17, %r18, %r19, %r20}, {%f1, %f2, %f3, %f4, %f5, %f6, %f7, %f8};
	// inline asm
	mov.u32 	%r2, %clock;
	// inline asm
	wmma.store.d.sync.aligned.row.m8n32k16.global.f32 	[%rd5], {%f9, %f10, %f11, %f12, %f13, %f14, %f15, %f16}, %r12;
	sub.s32 	%r21, %r2, %r1;
	st.local.u32 	[%rd7], %r21;
	mov.u64 	%rd11, $str;
	cvta.global.u64 	%rd12, %rd11;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r22, [retval0+0];
	
	//{
	}// Callseq End 0
	ret;
}

	// .globl	_Z7convertI6__halffEvPT_PT0_i
.visible .entry _Z7convertI6__halffEvPT_PT0_i(
	.param .u64 _Z7convertI6__halffEvPT_PT0_i_param_0,
	.param .u64 _Z7convertI6__halffEvPT_PT0_i_param_1,
	.param .u32 _Z7convertI6__halffEvPT_PT0_i_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_Z7convertI6__halffEvPT_PT0_i_param_0];
	ld.param.u64 	%rd2, [_Z7convertI6__halffEvPT_PT0_i_param_1];
	ld.param.u32 	%r2, [_Z7convertI6__halffEvPT_PT0_i_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB1_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	// inline asm
	{  cvt.rn.f16.f32 %rs1, %f1;}

	// inline asm
	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %rs1;

BB1_2:
	ret;
}

	// .globl	_Z7convertIffEvPT_PT0_i
.visible .entry _Z7convertIffEvPT_PT0_i(
	.param .u64 _Z7convertIffEvPT_PT0_i_param_0,
	.param .u64 _Z7convertIffEvPT_PT0_i_param_1,
	.param .u32 _Z7convertIffEvPT_PT0_i_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [_Z7convertIffEvPT_PT0_i_param_0];
	ld.param.u64 	%rd2, [_Z7convertIffEvPT_PT0_i_param_1];
	ld.param.u32 	%r2, [_Z7convertIffEvPT_PT0_i_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB2_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;

BB2_2:
	ret;
}


